Tables Managements commands
These commands will allow programmers to create tables and table schemas with rows and column families.

The following are Table Management commands

Create
List
Describe
Disable
Disable_all
Enable
Enable_all
Drop
Drop_all
Show_filters
Alter
Alter_status

List
=============
"List" command will display all the tables that are present or created in HBase
The output showing in above screen shot is currently showing the existing tables in HBase
Here in this screenshot, it shows that there are total 8 tables present inside HBase
We can filter output values from tables by passing optional regular expression parameters

Describe
=============
Syntax:describe <table name>
HBase Shell and General Commands

hbase(main):010:0>describe 'education'

disable
====================
Syntax: disable <tablename>
HBase Shell and General Commands

hbase(main):011:0>disable 'education'

disable_all
===================
 Syntax: disable_all<"matching regex"
This command will disable all the tables matching the given regex.
The implementation is same as delete command (Except adding regex for matching)
Once the table gets disable the user can able to delete the table from HBase
Before delete or dropping table, it should be disabled first

Enable
=============
Syntax: enable <tablename>
HBase Shell and General Commands

hbase(main):012:0>enable 'education'
This command will start enabling the named table
Whichever table is disabled, to retrieve back to its previous state we use this command
If a table is disabled in the first instance and not deleted or dropped, and if we want to re-use the disabled table then we have to enable it by using this command.
Here in the above screenshot we are enabling the table "education."

show_filters
===============
Syntax: show_filters
HBase Shell and General Commands

This command displays all the filters present in HBase like ColumnPrefix Filter, TimestampsFilter, PageFilter, FamilyFilter, etc.


drop
================
Syntax:drop <table name>
HBase Shell and General Commands

hbase(main):017:0>drop 'education'
We have to observe below points for drop command

To delete the table present in HBase, first we have to disable it
To drop the table present in HBase, first we have to disable it
So either table to drop or delete first the table should be disable using disable command
Here in above screenshot we are dropping table "education."
Before execution of this command, it is necessary that you disable table "education."

drop_all
=============
Syntax: drop_all<"regex">
This command will drop all the tables matching the given regex
Tables have to disable first before executing this command using disable_all
Tables with regex matching expressions are going to drop from HBase

is_enabled
===============
Syntax: is_enabled 'education'
This command will verify whether the named table is enabled or not. Usually, there is a little confusion between "enable" and "is_enabled" command action, which we clear here

Suppose a table is disabled, to use that table we have to enable it by using enable command
is_enabled command will check either the table is enabled or not

alter
==============
Syntax: alter <tablename>, NAME=><column familyname>, VERSIONS=>5
This command alters the column family schema. To understand what exactly it does, we have explained it here with an example.

Examples:

In these examples, we are going to perform alter command operations on tables and on its columns. We will perform operations like

Altering single, multiple column family names
Deleting column family names from table
Several other operations using scope attributes with table
To change or add the 'guru99_1' column family in table 'education' from current value to keep a maximum of 5 cell VERSIONS,
"education" is table name created with column name "guru99" previously
Here with the help of an alter command we are trying to change the column family schema to guru99_1 from guru99
HBase Shell and General Commands

hbase> alter 'education', NAME='guru99_1', VERSIONS=>5
You can also operate the alter command on several column families as well. For example, we will define two new column to our existing table "education".

 hbase> alter 'edu', 'guru99_1', {NAME => 'guru99_2', IN_MEMORY => true}, {NAME => 'guru99_3', VERSIONS => 5}
HBase Shell and General Commands

We can change more than one column schemas at a time using this command
guru99_2 and guru99_3 as shown in above screenshot are the two new column names that we have defined for the table education
We can see the way of using this command in the previous screen shot
In this step, we will see how to delete column family from the table. To delete the 'f1' column family in table 'education'.
Use one ofthese commands below,

hbase> alter 'education', NAME => 'f1', METHOD => 'delete'
hbase> alter 'education', 'delete' =>' guru99_1'    
In this command, we are trying to delete the column space name guru99_1 that we previously created in the first step
HBase Shell and General Commands

As shown in the below screen shots, it shows two steps â€“ how to change table scope attribute and how to remove the table scope attribute.
Syntax: alter <'tablename'>, MAX_FILESIZE=>'132545224'
HBase Shell and General Commands

Step 1) You can change table-scope attributes like MAX_FILESIZE, READONLY, MEMSTORE_FLUSHSIZE, DEFERRED_LOG_FLUSH, etc. These can be put at the end;for example, to change the max size of a region to 128MB or any other memory value we use this command.

Usage:

We can use MAX_FILESIZE with the table as scope attribute as above
The number represent in MAX_FILESIZE is in term of memory in bytes
NOTE: MAX_FILESIZE Attribute Table scope will be determined by some attributes present in the HBase. MAX_FILESIZE also come under table scope attributes.

Step 2) You can also remove a table-scope attribute using table_att_unset method. If you see the command

alter 'education', METHOD => 'table_att_unset', NAME => 'MAX_FILESIZE'
The above screen shot shows altered table name with scope attributes
Method table_att_unset is used to unset attributes present in the table
The second instance we are unsetting attribute MAX_FILESIZE
After execution of the command, it will simply unset MAX_FILESIZE attribute from"education" table.
